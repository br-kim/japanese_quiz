# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  push:
    branches:
      - master
jobs:
  build:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: ii
          POSTGRES_PASSWORD: 1234
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      # The hostname used to communicate with the PostgreSQL service container
      POSTGRES_HOST: localhost
      # The default PostgreSQL port
      POSTGRES_PORT: 5432
      GOOGLE_CLIENT_ID: ${{ secrets.JPN_QUIZ_GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.JPN_QUIZ_GOOGLE_CLIENT_SECRET }}
      SESSION_KEY: ${{ secrets.JPN_QUIZ_SESSION_KEY }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      REDIS_TLS_URL: ${{ secrets.REDIS_TLS_URL }}
      JPN_QUIZ_ENVIRON: ${{ secrets.JPN_QUIZ_ENVIRON }}

    steps:
    - uses: actions/checkout@v2

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f ./app/requirements.txt ]; then pip install -r ./app/requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        cd app
        PYTHONPATH=. pytest $(pwd)/test -q
